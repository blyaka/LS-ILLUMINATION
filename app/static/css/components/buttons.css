@property --base-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
}

@property --css-spin {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
}




.btn-link {
    text-decoration: none;
    position: relative;
    display: block;
    --radius: 22px;
    animation: cta-spin 3s linear infinite;
}

.btn-link::after {
    content: "";
    position: absolute;
    inset: -3px;
    border-radius: calc(var(--radius) + 16px);
    background:
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            rgba(255, 210, 251, 1) 0%,
            rgba(255, 158, 236, 1) 4%,
            rgba(255, 43, 214, 1) 8%,
            rgba(255, 0, 204, 0.4) 12%,
            rgba(255, 0, 204, 0) 20%,
            rgba(255, 43, 214, 1) 60%,
            rgba(255, 164, 237, 1) 70%,
            rgba(252, 196, 255, 1) 100%);
    filter: blur(8px);
    opacity: .35;
    pointer-events: none;
    z-index: -1;
    transition: opacity .28s cubic-bezier(.2, .8, .2, 1), filter .28s;
}


.btn-link::before {
    content: "";
    position: absolute;
    inset: -4px;
    border-radius: calc(var(--radius) + 24px);
    pointer-events: none;
    z-index: 0;
    background:
        radial-gradient(120% 60% at 50% 0%, rgba(255, 43, 214, var(--nb-top-a, 0)) 0%, rgba(255, 43, 214, 0) 60%),
        radial-gradient(120% 60% at 50% 100%, rgba(255, 43, 214, var(--nb-bottom-a, 0)) 0%, rgba(255, 43, 214, 0) 60%),
        radial-gradient(140% 120% at 0% 50%, rgba(255, 43, 214, var(--nb-left-a, 0)) 0%, rgba(255, 43, 214, 0) 60%),
        radial-gradient(140% 120% at 100% 50%, rgba(255, 43, 214, var(--nb-right-a, 0)) 0%, rgba(255, 43, 214, 0) 60%);
    filter: blur(12px);
    transition: filter .2s ease;
}



.btn-glow {
    justify-content: center;
    display: flex;
    --radius: 22px;
    --padding: 10px 16px;
    --nested-radius: calc(var(--radius) - var(--padding));
    color: var(--text);

    position: relative;
    border-radius: var(--radius);
    background: var(--bg);
    backdrop-filter: blur(54px) brightness(1.1);
    padding: var(--padding);

    overflow: hidden;
    isolation: isolate;
    box-shadow:
        inset 0.4px 0.4px 0 rgba(255, 255, 255, .2),
        inset -0.4px -0.4px 0 rgba(255, 255, 255, .2),
        inset 0 2px 0 rgba(255, 43, 214, var(--nb-top-border, 0)),
        inset 0 -2px 0 rgba(255, 43, 214, var(--nb-bottom-border, 0)),
        0 -6px 16px rgba(255, 43, 214, var(--nb-top-border, 0)),
        0 6px 16px rgba(255, 43, 214, var(--nb-bottom-border, 0)),
        inset 2px 0 0 rgba(255, 43, 214, var(--nb-left-border, 0)),
        inset -2px 0 0 rgba(255, 43, 214, var(--nb-right-border, 0)),
        -8px 0 16px rgba(255, 43, 214, var(--nb-left-border, 0)),
        8px 0 16px rgba(255, 43, 214, var(--nb-right-border, 0));
    animation: none;
    z-index: 1;
}


.btn-border {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 2px;
    background:
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            rgba(255, 210, 251, 1) 0%,
            rgba(255, 158, 236, 1) 4%,
            rgba(255, 43, 214, 1) 8%,
            rgba(255, 0, 204, 0.4) 12%,
            rgba(255, 0, 204, 0) 20%,
            rgba(255, 43, 214, 1) 60%,
            rgba(255, 164, 237, 1) 70%,
            rgba(252, 196, 255, 1) 100%);
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: .85;
    transition: opacity .25s;
    pointer-events: none;
    z-index: 2;
    opacity: .85;
    will-change: opacity, filter;
}

.btn-border::before {
    content: "";
    position: absolute;
    inset: -16px;
    border-radius: inherit;
    background:
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            rgba(255, 210, 251, 1) 0%,
            rgba(255, 158, 236, 1) 4%,
            rgba(255, 43, 214, 1) 8%,
            rgba(255, 0, 204, 0.4) 12%,
            rgba(255, 0, 204, 0) 20%,
            rgba(255, 43, 214, 1) 60%,
            rgba(255, 164, 237, 1) 70%,
            rgba(252, 196, 255, 1) 100%);
    filter: blur(25px);
    z-index: -1;
    transition: opacity .25s;
    opacity: .35;
    will-change: opacity, filter;
}

.btn-border::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 2px;
    background:
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            #ffd2fb 0%, #ff9eec 25%, #ff2bd6 50%, #ff9eec 75%, #ffd2fb 100%);
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity .28s cubic-bezier(.2, .8, .2, 1);
    pointer-events: none;
    z-index: 3;
}

.btn-link:hover {
    animation-play-state: paused;
}

.btn-glow:hover .btn-border {
    opacity: 1;
    background:
        conic-gradient(from 0deg at 50% 50%,
            #ffffff 0%,
            #ff9eec 25%,
            #ff2bd6 50%,
            #ff9eec 75%,
            #ffd2fb 100%);
}

.btn-glow:hover .btn-border::before {
    opacity: 1;
    filter: blur(28px);
    background:
        conic-gradient(from 0deg at 50% 50%,
            rgba(255, 43, 214, .9) 0 360deg);
}

.btn-link:hover::after {
    opacity: 1;
    filter: blur(12px);
    background:
        conic-gradient(from 0deg at 50% 50%,
            rgba(255, 43, 214, .55) 0 360deg);
}

.btn-glow:hover .btn-border::after {
    opacity: 1;
}


button.btn-link{
  appearance:none; -webkit-appearance:none;
  background: transparent !important;
  border: 0 !important;
  padding: 0; margin: 0;
  color: inherit; font: inherit; line-height: inherit;
  display: inline-block;    
  position: relative;
  border-radius: var(--radius);
  cursor: pointer;
}
button.btn-link:focus{ outline: none; }
button.btn-link:focus-visible{ outline:2px solid rgba(255,43,214,.6); outline-offset:2px; }


@keyframes cta-spin {
    from {
        --css-spin: 0deg;
    }

    to {
        --css-spin: 360deg;
    }
}

@keyframes spinGlow {
    to {
        transform: rotate(360deg);
    }
}



.cw-split__aside .btn-glow {
    width: 180px;
}

.news-btn {
    width: 170px;
}



/* @property --base-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
}

@property --css-spin {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
}


.glow-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 10px 16px;
    border-radius: 32px;
    background: var(--bg);
    color: #fff;
    text-decoration: none;
    font-size: 16px;
    transition: all 0.3s ease;
    width: 141px;
    height: 21px;

    position: relative;
    isolation: isolate;
    overflow: visible;

    --radius: 32px;

    --base-angle: 0deg;
    --css-spin: 0deg;
    --g1: 3%;
    --g2: 10%;
    --g3: 12%;
    --g4: 88%;
    --g5: 90%;
    --g6: 97%;

    --glow-outset: clamp(1px, .5vmin, 2px);
    --glow-blur: clamp(8px, 2vmin, 16px);

    --edge-op: 0;
    --edge-op: 1;
    animation: cta-spin 6s linear infinite;
}



.glass-btn {
    position: absolute;
    inset: calc(var(--border-width) + 1px);
    border-radius: calc(var(--radius) - var(--border-width) - 1px);
    padding: 5px;
    background: linear-gradient(140deg, rgba(255, 255, 255, .08), rgba(255, 255, 255, .03));
    border: 1px solid rgba(255, 255, 255, .08);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .04);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    place-items: center;
    z-index: 6;
    pointer-events: none;
    display: grid;
    gap: 0;
    overflow: clip;
}


.glow-btn::after {
    content: "";
    position: absolute;
    inset: calc(-1 * var(--glow-outset));
    border-radius: calc(var(--radius) + var(--glow-outset));
    border: var(--glow-width) solid transparent;
    background:
        linear-gradient(#0000, #0000) padding-box,
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            #ffffffff 0%,
            #ffd2f6ff var(--g1),
            #ff2bd64d var(--g2),
            #ff2bd600 var(--g3),
            #ff2bd600 var(--g4),
            #ff2bd64d var(--g5),
            #ffd2f6ff var(--g6),
            #ffffffff 100%) border-box;
    filter: blur(var(--blur-eff)) drop-shadow(var(--ds-x) var(--ds-y) var(--ds-blur-eff) var(--ds-color));
    opacity: var(--layer-op);
    z-index: 0;
    pointer-events: none;
}


.glow-btn>.thin {
    position: absolute;
    inset: calc(-1 * var(--thin-outset));
    border-radius: calc(var(--radius) + var(--thin-outset));
    border: var(--thin-width) solid transparent;
    background:
        linear-gradient(#0000, #0000) padding-box,
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            #ffffffff 3%, #ff2bd600 6%, #ff2bd600 93%, #ffffffff 97%) border-box;
    filter: blur(var(--thin-blur-eff)) drop-shadow(var(--thin-ds-x) var(--thin-ds-y) var(--thin-ds-blur-eff) var(--thin-ds-color));
    opacity: var(--layer-op);
    z-index: 2;
    pointer-events: none;
}

.glow-btn>.cut {
    position: absolute;
    inset: var(--border-width);
    border-radius: calc(var(--radius) - var(--border-width));
    background: var(--bg);
    z-index: 3;
    pointer-events: none;
}

.glow-btn::before {
    content: "";
    position: absolute;
    inset: 0;
    padding: var(--border-width);
    border-radius: inherit;
    background:
        conic-gradient(from calc(var(--base-angle) + var(--css-spin)) at 50% 50%,
            #ffffffff 0%,
            #ffd2f6ff var(--g1),
            #ff2bd64d var(--g2),
            #ff2bd600 var(--g3),
            #ff2bd600 var(--g4),
            #ff2bd64d var(--g5),
            #ffd2f6ff var(--g6),
            #ffffffff 100%) border-box;
    opacity: var(--layer-op);
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
    mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    mask-composite: exclude;
    z-index: 5;
    pointer-events: none;
}

.glow-btn:hover {
    --edge-op: 1;
    animation-duration: 3s;
}

@keyframes cta-spin {
    from {
        --css-spin: 0deg;
    }

    to {
        --css-spin: 360deg;
    }
} */